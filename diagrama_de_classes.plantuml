@startuml diagrama


class Pessoa {
    + nome: String
    + idade: Int
    + cpf: String
    + peso: Float
    + altura: Float
    + construtor(nome, idade, cpf, peso, altura)
    + validar_cpf(cpf)
}

class Paciente {
    + pessoa: Pessoa
    + prontuario: Prontuario
    + id_paciente: int
    + plano_de_saude: String
    + email: String
    + construtor(pessoa, prontuario, id_paciente, plano_de_saude, email)
    + adicionar_prontuario(prontuario)
    + print_prontuario()
    + adicionar_ao_historico()
    + adicionar_a_anamnese()
    + adicionar_a_avaliacao_inicial()
    + adicionar_ao_prognostico()
}

class Medico {
    + pessoa: Pessoa
    + crm: String
    + unidade_de_saude: UnidadeDeSaude
    + especializacao: String
    + construtor(pessoa, crm, unidade_de_saude, especializacao)
    + adicionar_cadastro(cadastro)
    + get_paciente(id)
    + get_numero_pacientes()
    + verify_if_id_exists(id)
    + get_id()
    + get_nome_pacientes(paciente)
}

class Prontuario {
    + paciente: Paciente
    + historico: Historico
    + anamnese: Anamnese 
    + avalicaoinicial: AvaliacaoInicial
    + prognostico: Prognostico
    + construtor(paciente, historico, anamnese, avalicaoinicial, prognostico)
    + print_prontuario()
}

class Cadastro {
    + medico: Medico
    + pacientes: []
    + numero_de_pacientes_cadastrados: Int
    + construtor(medico)
    + cadastrar_paciente()
    + inserir_paciente(paciente)
    + print_pacientes_cadastrados()
    + cadastrar_prontuario()
    + verify_prontuario(paciente)
}


class Historico {
    + doenca_previa: String
    + doenca_tratada: String
    + historico_familiar: String
    + grau_parentesco: String
    + construtor(doenca_previa, doenca_tratada, historico_familiar, grau_parentesco)
    + create_historico()
    + adicionar_ao_historico()
    + print_historico()
}

class Exame {
    + data: String
    + tipo: String
    + resultado: String
    + avaliacao: String
    + construtor(data, tipo, resultado, avaliacao)
    + adicionar_ao_exame()
    + print_exame()
}

class Anamnese {
    + nivel_consciencia: String
    + estado_cognitivo: String
    + humor_afeto: String
    + linguagem: String
    + construtor(nivel_consciencia, estado_cognitivo, humor_afeto, linguagem)
    + create_anamnese()
    + adicionar_a_anamnese()
    + print_anamnese()
}

class AvaliacaoInicial {
    + queixa: String
    + data_inicio: String
    + sintomas: String
    + avaliacao: String
    + construtor(queixa, data_inicio, sintomas, avaliacao)
    + create_avaliacao_inicial()
    + adicionar_a_avaliacao_inicial()
    + print_avaliacao_inicial()
}

class Prognostico {
    + medicacao: Medicacao
    + exame: Exame
    + especificadores: String
    + encaminhamentos: String
    + construtor(medicacao, exames, especificadores, encaminhamentos)
    + create_prognostico()
    + adicionar_ao_prognostico()
    + print_prognostico()
}

class Medicacao {
    + classe: String
    + tempo: String
    + nome: String
    + motivo: String
    + construtor(classe, tempo, nome, motivo)
    + adicionar_a_medicacao()
    + print_medicacao()
}



Pessoa <|-- Paciente
Pessoa <|-- Medico
Cadastro *-- Medico
Cadastro o-- Paciente
Cadastro o-- Prontuario
Prontuario *-- Paciente
Prontuario *-- Historico
Prontuario *-- Anamnese
Prontuario *-- AvaliacaoInicial
Prontuario *-- Prognostico
Prognostico --|> Medicacao
Prognostico --|> Exame

@enduml